{"version":3,"sources":["Components/Header/index.js","redux/types/types.js","redux/actions/actions.js","Components/Redux/Form/index.js","Components/Redux/Item/index.js","Components/Redux/List/index.js","Components/Redux/index.js","contexts/reducers/rootReducer.js","contexts/types/types.js","contexts/reducers/tasksReducer.js","contexts/store.js","Components/Context/Form/index.js","contexts/actions/actions.js","Components/Context/Item/index.js","Components/Context/List/index.js","Components/Context/index.js","Components/Saga/Form/index.js","Components/Saga/Item/index.js","Components/Saga/List/index.js","Components/Saga/index.js","App.js","redux/initState/initState.js","redux/reducers/tasksReducer.js","redux/reducers/rootReducer.js","redux/sagas/getTasksSaga.js","redux/sagas/changeStatusSaga.js","redux/sagas/deleteTaskSaga.js","redux/sagas/createTaskSaga.js","redux/sagas/rootSaga.js","redux/store.js","index.js"],"names":["Header","className","activeClassName","to","id","ADD","EDIT","DELETE","STATUS","STATUS_SAGA","DELETE_SAGA","ADD_TASK_SAGA","ADD_ALL","GET_ALL_SAGA","createTask","task","type","TYPES","payload","setTasks","tasksList","deleteTask","changeStatus","Form","useState","value","setValue","dispatch","useDispatch","onSubmit","e","text","preventDefault","getState","a","fetch","method","headers","body","JSON","stringify","response","status","json","newTask","placeholder","onChange","inputValue","target","require","Item","index","_id","onClick","then","res","data","List","tasks","useSelector","state","length","map","el","Redux","slices","useEffect","rootReducer","action","filter","Object","keys","reduce","acc","key","storeContext","createContext","dispatchContext","initState","useDispatchContext","useContext","Wrapper","children","useReducer","Provider","Date","now","memo","Context","Saga","App","exact","path","tasksReducer","combineReducers","worker","watcher","getAllList","call","put","takeEvery","changeStatusFetch","createTaskFetch","rootSaga","all","getAllTasksSaga","changeStatusSaga","deleteTaskSaga","createTaskSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","thunk","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAkCeA,MAhCf,WACE,OACE,qBAAKC,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAASC,gBAAgB,SAASD,UAAU,eAAeE,GAAG,IAA9D,kBAIA,qBAAKF,UAAU,2BAA2BG,GAAG,YAA7C,SACE,qBAAIH,UAAU,aAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWE,GAAG,SAAjC,qBAIF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWE,GAAG,WAAjC,uBAIF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWE,GAAG,QAAjC,+B,gCCvBDE,EAAM,MACNC,EAAO,OACPC,EAAS,SACTC,EAAS,SACTC,EAAc,cACdC,EAAc,cACdC,EAAgB,gBAChBC,EAAU,UACVC,EAAe,eCNfC,EAAa,SAACC,GAAD,MAAW,CACnCC,KAAMC,EACNC,QAASH,IAGEI,EAAW,SAACC,GAAD,MAAgB,CACtCJ,KAAMC,EACNC,QAASE,IA6CEC,EAAa,SAACjB,GAAD,MAAS,CACjCY,KAAMC,EACNC,QAASd,IASEkB,EAAe,SAAClB,GAAD,MAAS,CACnCY,KAAMC,EACNC,QAASd,I,QC3BImB,MApCf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,KAGRC,EAAWC,wBAYjB,OACE,qBAAK3B,UAAU,gCAAf,SACE,uBAAM4B,SARY,SAACC,GD0BM,IAACC,ECzB5BD,EAAEE,iBACFL,GDwB4BI,ECxBAN,EDwBD,uCAAU,WAAOE,EAAUM,GAAjB,iBAAAC,EAAA,sEAChBC,MAAM,SAAU,CACrCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAET,WANc,UASf,OARlBU,EADiC,QAS1BC,OAT0B,gCAUfD,EAASE,OAVM,OAU/BC,EAV+B,OAWrCjB,EAASb,EAAW8B,IAXiB,2CAAV,0DCvB3BlB,EAAS,KAKwBzB,UAAU,qBAAzC,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEe,KAAK,OACLS,MAAOA,EACPoB,YAAY,OACZC,SAlBY,SAAC,GAAuC,IAApBC,EAAmB,EAApCC,OAAUvB,MACjCC,EAASqB,IAkBD9C,UAAU,mBAId,wBAAQe,KAAK,SAASf,UAAU,kBAAhC,0B,OC/BA2B,EAAgBqB,EAAQ,IAAxBrB,YAwCOsB,MAtCf,YAA6C,IAA7BC,EAA4B,EAA5BA,MAAOpB,EAAqB,EAArBA,KAAMqB,EAAe,EAAfA,IAAKV,EAAU,EAAVA,OAC1Bf,EAAWC,IAUjB,OACE,qBAAI3B,UAAU,iDAAd,UACE,uBACEA,UAAS,8CAAyCyC,GAAU,QAD9D,UAGGS,EAAQ,EAHX,QAGqBpB,KAErB,uBAAM9B,UAAU,SAAhB,UACE,wBACEoD,QAjBc,WFgES,IAACjD,EE/D9BuB,GF+D8BvB,EE/DAgD,EF+DO,SAACzB,EAAUM,GAClDE,MAAM,UAAD,OAAW/B,GAAM,CACpBgC,OAAQ,UAEPkB,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIb,OACN,OAAOa,EAAIZ,UAGdW,MAAK,SAACE,GAAD,OAAUA,GAAQ7B,EAASL,EAAalB,WEvDxCY,KAAK,SACLf,UAAS,kBAAayC,EAAS,OAAS,UAA/B,SAHX,SAKGA,EAAS,SAAW,SAEvB,wBACEW,QApBc,WFiDO,IAACjD,EEhD5BuB,GFgD4BvB,EEhDAgD,EFgDO,SAACzB,EAAUM,GAChDE,MAAM,UAAD,OAAW/B,GAAM,CACpBgC,OAAQ,WACPkB,MAAK,SAACC,GAAD,OAAwB,MAAfA,EAAIb,QAAkBf,EAASN,EAAWjB,WE/BnDY,KAAK,SACLf,UAAU,sBAHZ,2BCXOwD,MAff,WACE,IAAMC,EAAQC,uBAAY,SAACC,GAAD,OAAWA,EAAMF,SAE3C,OACE,oBAAIzD,UAAU,aAAd,SACGyD,EAAMG,OACHH,EAAMI,KAAI,SAACC,EAAIZ,GAAL,OACR,cAAC,EAAD,aAAmBA,MAAOA,GAAWY,GAA1BA,EAAGX,QAGhB,QCSKY,ICpBUC,EDoBVD,EAhBf,WACE,IAAMrC,EAAWC,wBAMjB,OAJAsC,qBAAU,WACRvC,EJOuB,uCAAM,WAAOA,EAAUM,GAAjB,iBAAAC,EAAA,sEACRC,MAAM,UADE,cACzBM,EADyB,gBAEPA,EAASE,OAFF,QAEzBvB,EAFyB,SAI7BO,EAASR,EAASC,IAJW,2CAAN,2DINtB,IAGD,sBAAKnB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,QEjBOI,EAAM,MAENE,EAAS,SACTC,EAAS,S,gBDcP2D,GAfUF,EAWW,CAClCP,MEZmB,WAAyB,IAAxBE,EAAuB,uDAAf,GAAIQ,EAAW,uCAC3C,OAAQA,EAAOpD,MACb,KAAKC,EACH,MAAM,GAAN,mBAAW2C,GAAX,CAAkBQ,EAAOlD,UAa3B,KAAKD,EACH,OAAO2C,EAAME,KAAI,SAACC,GAChB,OAAIA,EAAGX,MAAQgB,EAAOlD,QACb,2BACF6C,GADL,IAEErB,QAASqB,EAAGrB,SAGTqB,KAGX,KAAK9C,EACH,OAAO2C,EAAMS,QAAO,SAACN,GAAD,OAAQA,EAAGX,MAAQgB,EAAOlD,WAEhD,QACE,OAAO0C,KF9BJ,SAACA,EAAOQ,GACb,OAAOE,OAAOC,KAAKN,GAAQO,QAAO,SAACC,EAAKC,GACtC,OAAO,2BACFD,GADL,kBAEGC,EAAMT,EAAOS,GAAKD,EAAIC,GAAMN,OAE9BR,KGNDe,EAAeC,0BACfC,EAAkBD,0BAElBE,EAAY,CAChBpB,MAAO,IAeF,IAIMqB,EAAqB,WAChC,OAAOC,qBAAWH,IAGLI,EApBf,YAAgC,IAAbC,EAAY,EAAZA,SAAY,EACHC,qBAAWhB,EAAaW,GADrB,mBACtBlB,EADsB,KACfjC,EADe,KAG7B,OACE,cAACgD,EAAaS,SAAd,CAAuB3D,MAAOmC,EAA9B,SACE,cAACiB,EAAgBO,SAAjB,CAA0B3D,MAAOE,EAAjC,SACGuD,OCZT,SAAS3D,IAAQ,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,KAGRC,EAAWoD,IAYjB,OACE,qBAAK9E,UAAU,gCAAf,SACE,uBAAM4B,SARY,SAACC,GCXC,IAACC,EDYvBD,EAAEE,iBACFL,GCbuBI,EDaHN,ECba,CACnCT,KAAMC,EACNC,QAAS,CACPkC,IAAKiC,KAAKC,MACVvD,OACAW,QAAQ,MDSRhB,EAAS,KAKwBzB,UAAU,qBAAzC,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEe,KAAK,OACLS,MAAOA,EACPoB,YAAY,OACZC,SAlBY,SAAC,GAAuC,IAApBC,EAAmB,EAApCC,OAAUvB,MACjCC,EAASqB,IAkBD9C,UAAU,mBAId,wBAAQe,KAAK,SAASf,UAAU,iBAAhC,yBAQOsF,qBAAKhE,GECL2B,MAtCf,YAA6C,IAA7BC,EAA4B,EAA5BA,MAAOpB,EAAqB,EAArBA,KAAMqB,EAAe,EAAfA,IAAKV,EAAU,EAAVA,OAC1Bf,EAAWoD,IAUjB,OACE,qBAAI9E,UAAU,iDAAd,UACE,uBACEA,UAAS,8CAAyCyC,GAAU,QAD9D,UAGGS,EAAQ,EAHX,QAGqBpB,KAErB,uBAAM9B,UAAU,SAAhB,UACE,wBACEoD,QAjBc,WACpB1B,EDSiC,CACnCX,KAAMC,EACNC,QCXwBkC,KAiBhBpC,KAAK,SACLf,UAAS,kBAAayC,EAAS,OAAS,UAA/B,SAHX,SAKGA,EAAS,SAAW,SAEvB,wBACEW,QApBc,WACpB1B,EDA+B,CACjCX,KAAMC,EACNC,QCFsBkC,KAoBdpC,KAAK,SACLf,UAAU,sBAHZ,2BCXOwD,MAff,WAAiB,IACPC,EJmBDsB,qBAAWL,GInBVjB,MAER,OACE,oBAAIzD,UAAU,aAAd,SACGyD,EAAMG,OACHH,EAAMI,KAAI,SAACC,EAAIZ,GAAL,OACR,cAAC,EAAD,aAAmBA,MAAOA,GAAWY,GAA1BA,EAAGX,QAGhB,QCAKoC,MAVf,WACE,OACE,sBAAKvF,UAAU,OAAf,UACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,QCgCSsB,MApCf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,KAGRC,EAAWC,wBAYjB,OACE,qBAAK3B,UAAU,gCAAf,SACE,uBAAM4B,SARY,SAACC,GACrBA,EAAEE,iBACFL,EdHqC,CACvCX,KAAMC,EACNC,QcC6BO,IAC3BC,EAAS,KAKwBzB,UAAU,qBAAzC,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEe,KAAK,OACLS,MAAOA,EACPoB,YAAY,OACZC,SAlBY,SAAC,GAAuC,IAApBC,EAAmB,EAApCC,OAAUvB,MACjCC,EAASqB,IAkBD9C,UAAU,mBAId,wBAAQe,KAAK,SAASf,UAAU,kBAAhC,0BC/BA2B,EAAgBqB,EAAQ,IAAxBrB,YAwCOsB,OAtCf,YAA6C,IAA7BC,EAA4B,EAA5BA,MAAOpB,EAAqB,EAArBA,KAAMqB,EAAe,EAAfA,IAAKV,EAAU,EAAVA,OAC1Bf,EAAWC,IAUjB,OACE,qBAAI3B,UAAU,iDAAd,UACE,uBACEA,UAAS,8CAAyCyC,GAAU,QAD9D,UAGGS,EAAQ,EAHX,QAGqBpB,KAErB,uBAAM9B,UAAU,SAAhB,UACE,wBACEoD,QAjBc,WACpB1B,EfsBqC,CACvCX,KAAMC,EACNC,QexB+BkC,KAiBvBpC,KAAK,SACLf,UAAS,kBAAayC,EAAS,OAAS,UAA/B,SAHX,SAKGA,EAAS,SAAW,SAEvB,wBACEW,QApBc,WACpB1B,EfuBmC,CACrCX,KAAMC,EACNC,QezB6BkC,KAoBrBpC,KAAK,SACLf,UAAU,sBAHZ,2BCXOwD,OAff,WACE,IAAMC,EAAQC,uBAAY,SAACC,GAAD,OAAWA,EAAMF,SAE3C,OACE,oBAAIzD,UAAU,aAAd,SACGyD,EAAMG,OACHH,EAAMI,KAAI,SAACC,EAAIZ,GAAL,OACR,cAAC,GAAD,aAAmBA,MAAOA,GAAWY,GAA1BA,EAAGX,QAGhB,QCSKqC,OAhBf,WACE,IAAM9D,EAAWC,wBAMjB,OAJAsC,qBAAU,WACRvC,EjBekC,CACpCX,KAAMC,MiBfH,IAGD,sBAAKhB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,uBACA,cAAC,GAAD,QCyBSyF,OA7Bf,WACE,OACE,qBAAKzF,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,IAAlB,SACE,2CAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,UACE,cAAC,IAAD,CAAUzF,GAAG,iB,2BC9BV2E,GAJG,CAChBpB,MAAO,ICuCMmC,GAtCM,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIQ,EAAW,uCAC3C,OAAQA,EAAOpD,MACb,KAAKC,EACH,MAAM,GAAN,mBAAW2C,GAAX,CAAkBQ,EAAOlD,UAE3B,KAAKD,EACH,OAAOmD,EAAOlD,QAEhB,KAAKD,EACH,OAAO2C,EAAME,KAAI,SAACC,GAChB,OAAIA,EAAGX,MAAQgB,EAAOlD,QAAQd,GACrB,2BACF2D,GADL,IAEEhC,KAAMqC,EAAOlD,QAAQa,OAGlBgC,KAGX,KAAK9C,EACH,OAAO2C,EAAME,KAAI,SAACC,GAChB,OAAIA,EAAGX,MAAQgB,EAAOlD,QACb,2BACF6C,GADL,IAEErB,QAASqB,EAAGrB,SAGTqB,KAGX,KAAK9C,EACH,OAAO2C,EAAMS,QAAO,SAACN,GAAD,OAAQA,EAAGX,MAAQgB,EAAOlD,WAEhD,QACE,OAAO0C,IC7BEO,GAJK2B,2BAAgB,CAClCpC,MAAOmC,K,6BCICE,I,YAKAC,IATV,SAASC,KACP,OAAO9D,MAAM,UAAUmB,MAAK,SAACC,GAAD,OAASA,EAAIZ,UAG3C,SAAUoD,KAAV,uEACoB,OADpB,SAC0BG,aAAKD,IAD/B,OAEE,OADM7E,EADR,gBAEQ+E,aAAIhF,EAASC,IAFrB,wCAKA,SAAU4E,KAAV,iEACE,OADF,SACQI,aAAUvF,EAAckF,IADhC,wCAIeC,U,YCHLD,I,YAOAC,IAjBV,SAASK,GAAkBjG,GACzB,OAAO+B,MAAM,UAAD,OAAW/B,GAAM,CAC3BgC,OAAQ,UACPkB,MAAK,SAACC,GACP,GAAmB,MAAfA,EAAIb,OACN,OAAOa,EAAIZ,UAKjB,SAAUoD,GAAO3B,GAAjB,iEACiB,OADjB,SACuB8B,aAAKG,GAAmBjC,EAAOlD,SADtD,kCAGI,OAHJ,SAGUiF,aAAI7E,EAAa8C,EAAOlD,UAHlC,wCAOA,SAAU8E,KAAV,iEACE,OADF,SACQI,aAAU3F,EAAasF,IAD/B,wCAIeC,U,YCfLD,I,YAOAC,IAbV,SAASC,GAAW7F,GAClB,OAAO+B,MAAM,UAAD,OAAW/B,GAAM,CAC3BgC,OAAQ,WACPkB,MAAK,SAACC,GAAD,OAAwB,MAAfA,EAAIb,UAGvB,SAAUqD,GAAO3B,GAAjB,iEACiB,OADjB,SACuB8B,aAAKD,GAAY7B,EAAOlD,SAD/C,kCAGI,OAHJ,SAGUiF,aAAI9E,EAAW+C,EAAOlD,UAHhC,wCAOA,SAAU8E,KAAV,iEACE,OADF,SACQI,aAAU1F,EAAaqF,IAD/B,wCAIeC,U,YCPLD,I,YAQAC,IAlBV,SAASM,GAAgBvE,GACvB,OAAOI,MAAM,UAAW,CACtBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAET,WACtBuB,MAAK,SAACC,GAAD,OAASA,EAAIZ,UAGvB,SAAUoD,GAAO3B,GAAjB,uEACkB,OADlB,SACwB8B,aAAKI,GAAiBlC,EAAOlD,SADrD,YACQ0B,EADR,wBAII,OAJJ,SAIUuD,aAAIrF,EAAW8B,IAJzB,wCAQA,SAAUoD,KAAV,iEACE,OADF,SACQI,aAAUzF,EAAeoF,IADjC,wCAIeC,U,YCpBUO,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,aAAI,CACRC,KACAC,KACAC,KACAC,OALW,wCCEf,IAAMC,GAAiBC,eAEjBC,GAAQC,uBACZ7C,GACAW,GACAmC,+BAAoBC,2BAAgBC,KAAON,MAG7CA,GAAeO,IAAIb,IAEJQ,UCVfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,UAINS,SAASC,eAAe,W","file":"static/js/main.51ada386.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <NavLink activeClassName=\"active\" className=\"navbar-brand\" to=\"/\">\n          Home\n        </NavLink>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/redux\">\n                Thunk\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/context\">\n                Context\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/saga\">\n                Saga\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","export const ADD = 'ADD';\nexport const EDIT = 'EDIT';\nexport const DELETE = 'DELETE';\nexport const STATUS = 'STATUS';\nexport const STATUS_SAGA = 'STATUS_SAGA';\nexport const DELETE_SAGA = 'DELETE_SAGA';\nexport const ADD_TASK_SAGA = 'ADD_TASK_SAGA';\nexport const ADD_ALL = 'ADD_ALL';\nexport const GET_ALL_SAGA = 'GET_ALL_SAGA';\n","import * as TYPES from '../types/types';\n\nexport const createTask = (task) => ({\n  type: TYPES.ADD,\n  payload: task,\n});\n\nexport const setTasks = (tasksList) => ({\n  type: TYPES.ADD_ALL,\n  payload: tasksList,\n});\n\nexport const createTaskSaga = (text) => ({\n  type: TYPES.ADD_TASK_SAGA,\n  payload: text,\n});\n\nexport const getAllTasks = () => async (dispatch, getState) => {\n  const response = await fetch(`/tasks`);\n  const tasksList = await response.json();\n  if (tasksList) {\n    dispatch(setTasks(tasksList));\n  }\n};\n\nexport const getAllTasksSaga = () => ({\n  type: TYPES.GET_ALL_SAGA,\n});\n\nexport const changeStatusSaga = (id) => ({\n  type: TYPES.STATUS_SAGA,\n  payload: id,\n});\n\nexport const deleteTaskSaga = (id) => ({\n  type: TYPES.DELETE_SAGA,\n  payload: id,\n});\n\nexport const createTaskThunk = (text) => async (dispatch, getState) => {\n  const response = await fetch(`/tasks`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ text }),\n  });\n\n  if (response.status === 200) {\n    const newTask = await response.json();\n    dispatch(createTask(newTask));\n  }\n};\n\nexport const deleteTask = (id) => ({\n  type: TYPES.DELETE,\n  payload: id,\n});\n\nexport const deleteTaskThunk = (id) => (dispatch, getState) => {\n  fetch(`/tasks/${id}`, {\n    method: 'DELETE',\n  }).then((res) => res.status === 200 && dispatch(deleteTask(id)));\n};\n\nexport const changeStatus = (id) => ({\n  type: TYPES.STATUS,\n  payload: id,\n});\n\nexport const changeStatusThunk = (id) => (dispatch, getState) => {\n  fetch(`/tasks/${id}`, {\n    method: 'PATCH',\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.json();\n      }\n    })\n    .then((data) => data && dispatch(changeStatus(id)));\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as AC from '../../../redux/actions/actions';\n\nfunction Form() {\n  const [value, setValue] = useState('');\n\n  const dispatch = useDispatch();\n\n  const changeHandler = ({ target: { value: inputValue } }) => {\n    setValue(inputValue);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(AC.createTaskThunk(value));\n    setValue('');\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <form onSubmit={submitHandler} className=\"d-flex flex-column\">\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            value={value}\n            placeholder=\"Task\"\n            onChange={changeHandler}\n            className=\"form-control\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import * as AC from '../../../redux/actions/actions';\nconst { useDispatch } = require('react-redux');\n\nfunction Item({ index, text, _id, status }) {\n  const dispatch = useDispatch();\n\n  const statusHandler = () => {\n    dispatch(AC.changeStatusThunk(_id));\n  };\n\n  const deleteHandler = () => {\n    dispatch(AC.deleteTaskThunk(_id));\n  };\n\n  return (\n    <li className=\"list-group-item d-flex justify-content-between\">\n      <span\n        className={`d-flex align-items-center tasksText ${status && 'done'}`}\n      >\n        {index + 1}.&nbsp;{text}\n      </span>\n      <span className=\"d-flex\">\n        <button\n          onClick={statusHandler}\n          type=\"button\"\n          className={`btn btn-${status ? 'dark' : 'success'} mx-1`}\n        >\n          {status ? 'UnDone' : 'Done'}\n        </button>\n        <button\n          onClick={deleteHandler}\n          type=\"button\"\n          className=\"btn btn-danger mx-1\"\n        >\n          Delete\n        </button>\n      </span>\n    </li>\n  );\n}\n\nexport default Item;\n","import { useSelector } from 'react-redux';\nimport Item from '../Item';\n\nfunction List() {\n  const tasks = useSelector((state) => state.tasks);\n\n  return (\n    <ul className=\"list-group\">\n      {tasks.length\n        ? tasks.map((el, index) => (\n            <Item key={el._id} index={index} {...el} />\n            // <Item key={el._id} index={index} id={el._id} status={el.status} text={el.text}  />\n          ))\n        : null}\n    </ul>\n  );\n}\n\nexport default List;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllTasks } from '../../redux/actions/actions';\nimport Form from './Form';\nimport List from './List';\n\nfunction Redux() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTasks());\n  }, []);\n\n  return (\n    <div className=\"mt-5\">\n      <Form />\n      <hr />\n      <List />\n    </div>\n  );\n}\n\nexport default Redux;\n","import tasksReducer from './tasksReducer';\n\nconst combineReducers = (slices) => {\n  return (state, action) => {\n    return Object.keys(slices).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: slices[key](acc[key], action),\n      };\n    }, state);\n  };\n};\n\nconst rootReducer = combineReducers({\n  tasks: tasksReducer,\n});\n\nexport default rootReducer;\n","export const ADD = 'ADD';\nexport const EDIT = 'EDIT';\nexport const DELETE = 'DELETE';\nexport const STATUS = 'STATUS';\n","import * as TYPES from '../types/types';\n\nconst tasksReducer = (state = [], action) => {\n  switch (action.type) {\n    case TYPES.ADD:\n      return [...state, action.payload];\n\n    // case TYPES.EDIT:\n    //   return state.map((el) => {\n    //     if (el._id === action.payload.id) {\n    //       return {\n    //         ...el,\n    //         text: action.payload.text,\n    //       };\n    //     }\n    //     return el;\n    //   });\n\n    case TYPES.STATUS:\n      return state.map((el) => {\n        if (el._id === action.payload) {\n          return {\n            ...el,\n            status: !el.status,\n          };\n        }\n        return el;\n      });\n\n    case TYPES.DELETE:\n      return state.filter((el) => el._id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n","import { createContext, useReducer, useContext } from 'react';\nimport rootReducer from './reducers/rootReducer';\n\nconst storeContext = createContext();\nconst dispatchContext = createContext();\n\nconst initState = {\n  tasks: [],\n};\n\nfunction Wrapper({ children }) {\n  const [state, dispatch] = useReducer(rootReducer, initState);\n\n  return (\n    <storeContext.Provider value={state}>\n      <dispatchContext.Provider value={dispatch}>\n        {children}\n      </dispatchContext.Provider>\n    </storeContext.Provider>\n  );\n}\n\nexport const useSelectorContext = () => {\n  return useContext(storeContext);\n};\n\nexport const useDispatchContext = () => {\n  return useContext(dispatchContext);\n};\n\nexport default Wrapper;\n","import { memo, useState } from 'react';\nimport { createTask } from '../../../contexts/actions/actions';\nimport { useDispatchContext } from '../../../contexts/store';\n\nfunction Form() {\n  const [value, setValue] = useState('');\n\n  const dispatch = useDispatchContext();\n\n  const changeHandler = ({ target: { value: inputValue } }) => {\n    setValue(inputValue);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createTask(value));\n    setValue('');\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <form onSubmit={submitHandler} className=\"d-flex flex-column\">\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            value={value}\n            placeholder=\"Task\"\n            onChange={changeHandler}\n            className=\"form-control\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-danger\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default memo(Form);\n","import * as TYPES from '../types/types';\n\nexport const createTask = (text) => ({\n  type: TYPES.ADD,\n  payload: {\n    _id: Date.now(),\n    text,\n    status: false,\n  },\n});\n\nexport const deleteTask = (id) => ({\n  type: TYPES.DELETE,\n  payload: id,\n});\n\nexport const changeStatus = (id) => ({\n  type: TYPES.STATUS,\n  payload: id,\n});\n","import { changeStatus, deleteTask } from '../../../contexts/actions/actions';\nimport { useDispatchContext } from '../../../contexts/store';\n\nfunction Item({ index, text, _id, status }) {\n  const dispatch = useDispatchContext();\n\n  const statusHandler = () => {\n    dispatch(changeStatus(_id));\n  };\n\n  const deleteHandler = () => {\n    dispatch(deleteTask(_id));\n  };\n\n  return (\n    <li className=\"list-group-item d-flex justify-content-between\">\n      <span\n        className={`d-flex align-items-center tasksText ${status && 'done'}`}\n      >\n        {index + 1}.&nbsp;{text}\n      </span>\n      <span className=\"d-flex\">\n        <button\n          onClick={statusHandler}\n          type=\"button\"\n          className={`btn btn-${status ? 'dark' : 'success'} mx-1`}\n        >\n          {status ? 'UnDone' : 'Done'}\n        </button>\n        <button\n          onClick={deleteHandler}\n          type=\"button\"\n          className=\"btn btn-danger mx-1\"\n        >\n          Delete\n        </button>\n      </span>\n    </li>\n  );\n}\n\nexport default Item;\n","import { useSelectorContext } from '../../../contexts/store';\nimport Item from '../Item';\n\nfunction List() {\n  const { tasks } = useSelectorContext();\n\n  return (\n    <ul className=\"list-group\">\n      {tasks.length\n        ? tasks.map((el, index) => (\n            <Item key={el._id} index={index} {...el} />\n            // <Item key={el._id} index={index} id={el._id} status={el.status} text={el.text}  />\n          ))\n        : null}\n    </ul>\n  );\n}\n\nexport default List;\n","import Form from './Form';\nimport List from './List';\n\nfunction Context() {\n  return (\n    <div className=\"mt-5\">\n      <Form />\n      <hr />\n      <List />\n    </div>\n  );\n}\n\nexport default Context;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as AC from '../../../redux/actions/actions';\n\nfunction Form() {\n  const [value, setValue] = useState('');\n\n  const dispatch = useDispatch();\n\n  const changeHandler = ({ target: { value: inputValue } }) => {\n    setValue(inputValue);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(AC.createTaskSaga(value));\n    setValue('');\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <form onSubmit={submitHandler} className=\"d-flex flex-column\">\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            value={value}\n            placeholder=\"Task\"\n            onChange={changeHandler}\n            className=\"form-control\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import * as AC from '../../../redux/actions/actions';\nconst { useDispatch } = require('react-redux');\n\nfunction Item({ index, text, _id, status }) {\n  const dispatch = useDispatch();\n\n  const statusHandler = () => {\n    dispatch(AC.changeStatusSaga(_id));\n  };\n\n  const deleteHandler = () => {\n    dispatch(AC.deleteTaskSaga(_id));\n  };\n\n  return (\n    <li className=\"list-group-item d-flex justify-content-between\">\n      <span\n        className={`d-flex align-items-center tasksText ${status && 'done'}`}\n      >\n        {index + 1}.&nbsp;{text}\n      </span>\n      <span className=\"d-flex\">\n        <button\n          onClick={statusHandler}\n          type=\"button\"\n          className={`btn btn-${status ? 'dark' : 'success'} mx-1`}\n        >\n          {status ? 'UnDone' : 'Done'}\n        </button>\n        <button\n          onClick={deleteHandler}\n          type=\"button\"\n          className=\"btn btn-danger mx-1\"\n        >\n          Delete\n        </button>\n      </span>\n    </li>\n  );\n}\n\nexport default Item;\n","import { useSelector } from 'react-redux';\nimport Item from '../Item';\n\nfunction List() {\n  const tasks = useSelector((state) => state.tasks);\n\n  return (\n    <ul className=\"list-group\">\n      {tasks.length\n        ? tasks.map((el, index) => (\n            <Item key={el._id} index={index} {...el} />\n            // <Item key={el._id} index={index} id={el._id} status={el.status} text={el.text}  />\n          ))\n        : null}\n    </ul>\n  );\n}\n\nexport default List;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllTasksSaga } from '../../redux/actions/actions';\nimport Form from './Form';\nimport List from './List';\n\nfunction Saga() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTasksSaga());\n  }, []);\n\n  return (\n    <div className=\"mt-5\">\n      <Form />\n      <hr />\n      <List />\n    </div>\n  );\n}\n\nexport default Saga;\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Header from './Components/Header';\nimport Redux from './Components/Redux';\nimport Context from './Components/Context';\n\nimport Saga from './Components/Saga';\n\nfunction App() {\n  return (\n    <div className=\"container py-5\">\n      <Router>\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <h1>Welcome</h1>\n          </Route>\n          <Route exact path=\"/redux\">\n            <Redux />\n          </Route>\n          <Route exact path=\"/context\">\n            <Context />\n          </Route>\n          <Route exact path=\"/saga\">\n            <Saga />\n          </Route>\n\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const initState = {\n  tasks: [],\n};\n\nexport default initState;\n","import * as TYPES from '../types/types';\n\nconst tasksReducer = (state = [], action) => {\n  switch (action.type) {\n    case TYPES.ADD:\n      return [...state, action.payload];\n\n    case TYPES.ADD_ALL:\n      return action.payload;\n\n    case TYPES.EDIT:\n      return state.map((el) => {\n        if (el._id === action.payload.id) {\n          return {\n            ...el,\n            text: action.payload.text,\n          };\n        }\n        return el;\n      });\n\n    case TYPES.STATUS:\n      return state.map((el) => {\n        if (el._id === action.payload) {\n          return {\n            ...el,\n            status: !el.status,\n          };\n        }\n        return el;\n      });\n\n    case TYPES.DELETE:\n      return state.filter((el) => el._id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n","import { combineReducers } from 'redux';\nimport tasksReducer from './tasksReducer';\n\nconst rootReducer = combineReducers({\n  tasks: tasksReducer,\n});\n\nexport default rootReducer;\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport { setTasks } from '../actions/actions';\nimport { GET_ALL_SAGA } from '../types/types';\n\nfunction getAllList() {\n  return fetch(`/tasks`).then((res) => res.json());\n}\n\nfunction* worker() {\n  const tasksList = yield call(getAllList);\n  yield put(setTasks(tasksList));\n}\n\nfunction* watcher() {\n  yield takeEvery(GET_ALL_SAGA, worker);\n}\n\nexport default watcher;\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport { changeStatus } from '../actions/actions';\nimport { STATUS_SAGA } from '../types/types';\n\nfunction changeStatusFetch(id) {\n  return fetch(`/tasks/${id}`, {\n    method: 'PATCH',\n  }).then((res) => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  });\n}\n\nfunction* worker(action) {\n  const status = yield call(changeStatusFetch, action.payload);\n  if (status) {\n    yield put(changeStatus(action.payload));\n  }\n}\n\nfunction* watcher() {\n  yield takeEvery(STATUS_SAGA, worker);\n}\n\nexport default watcher;\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport { deleteTask } from '../actions/actions';\nimport { DELETE_SAGA } from '../types/types';\n\nfunction getAllList(id) {\n  return fetch(`/tasks/${id}`, {\n    method: 'DELETE',\n  }).then((res) => res.status === 200);\n}\n\nfunction* worker(action) {\n  const status = yield call(getAllList, action.payload);\n  if (status) {\n    yield put(deleteTask(action.payload));\n  }\n}\n\nfunction* watcher() {\n  yield takeEvery(DELETE_SAGA, worker);\n}\n\nexport default watcher;\n","import { put, takeEvery, call } from 'redux-saga/effects';\nimport { createTask } from '../actions/actions';\nimport { ADD_TASK_SAGA } from '../types/types';\n\nfunction createTaskFetch(text) {\n  return fetch(`/tasks/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ text }),\n  }).then((res) => res.json());\n}\n\nfunction* worker(action) {\n  const newTask = yield call(createTaskFetch, action.payload);\n\n  if (newTask) {\n    yield put(createTask(newTask));\n  }\n}\n\nfunction* watcher() {\n  yield takeEvery(ADD_TASK_SAGA, worker);\n}\n\nexport default watcher;\n","import { all } from 'redux-saga/effects';\nimport getAllTasksSaga from './getTasksSaga';\nimport changeStatusSaga from './changeStatusSaga';\nimport deleteTaskSaga from './deleteTaskSaga';\nimport createTaskSaga from './createTaskSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    getAllTasksSaga(),\n    changeStatusSaga(),\n    deleteTaskSaga(),\n    createTaskSaga(),\n  ]);\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport initState from './initState/initState';\nimport rootReducer from './reducers/rootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  initState,\n  composeWithDevTools(applyMiddleware(thunk, sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Wrapper from './contexts/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Wrapper>\n        <App />\n      </Wrapper>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}